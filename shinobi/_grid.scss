@use "sass:math";

$grid-columns: 12;
$grid-gaps: (
    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
);

//List of comma seperated values to justify the content
$layout-values: flex-start, flex-end, center, space-between, space-around;

//base layout classes
.container {
    width: 100%;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row {
    display: flex;
    //If it can't fit onto the row then it should move to the next row
    flex-flow: row wrap;
}

//Grid gaps
@each $key, $val in $grid-gaps {
    //The > * applies the gap styling to any elements
    // included inside the main div so essentially 
    //this will be added to the row div where the cards are found.
    .gap-#{$key} > *{
        padding: $val;
    }
    .gap-#{$key} {
        margin-left: -$val;
        margin-right: -$val;
    }
}

//Justify Content Classes
@each $val in $layout-values {
    .justify-#{$val} {
        justify-content: $val;
    }
}

//col classes
//generate for all of the breakpoints
@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl {
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i * 100%, $grid-columns)
        }
    }
}

// //Card responsiveness classes

// .card {
//     box-sizing: border-box;
//     flex-grow: 0;

//     @include sm {
//         flex: 0 0 100%;
//     }

//     @include md {
//         flex: 0 0 math.div(100%, 2);
//     }

//     @include lg {
//         flex: 0 0 math.div(100%, 3);
//     }

//     @include xl {
//         flex: 0 0 math.div(100%, 4);
//     }
// }
